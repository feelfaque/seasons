{"version":3,"sources":["components/SeasonDisplay.js","components/Spinner.js","App.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","className","Spinner","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGMA,EAAe,CACjBC,OAAQ,CACJC,KAAM,sBACNC,SAAU,OAEdC,OAAQ,CACJF,KAAM,qBACNC,SAAU,cAuBHE,EAbO,SAACC,GACnB,IAReC,EAAKC,EAQdC,GARSF,EAQUD,EAAMC,KARXC,GAQgB,IAAIE,MAAOC,YAPnC,GAAKH,EAAQ,EACdD,EAAM,EAAG,SAAW,SAEpBA,EAAM,EAAG,SAAW,UAGF,EAEHP,EAAaS,GAAhCP,EAFsB,EAEtBA,KAAMC,EAFgB,EAEhBA,SAEb,OACI,sBAAKS,UAAS,yBAAoBH,GAAlC,UACI,mBAAGG,UAAS,kBAAaT,EAAb,qBACZ,6BAAKD,IACL,mBAAGU,UAAS,kBAAaT,EAAb,0BCfTU,EAVC,WACZ,OACI,qBAAKD,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,2BCyBGE,E,4MA1BXC,MAAQ,CAACR,IAAK,KAAMS,aAAc,I,uDAElC,WAAqB,IAAD,OAChBC,OAAOC,UAAUC,YAAYC,oBACzB,SAACC,GAAD,OAAc,EAAKC,SAAS,CAACf,IAAKc,EAASE,OAAOC,cAClD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAACN,aAAcS,EAAIC,e,oBAIlD,WACI,OAAIC,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMR,IAChC,0CAAaoB,KAAKZ,MAAMC,iBAG9BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMR,IAChC,cAAC,EAAD,CAAeA,IAAKoB,KAAKZ,MAAMR,MAItC,qBAAKK,UAAU,MAAf,SACI,cAAC,EAAD,U,GArBEgB,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a75724fc.chunk.js","sourcesContent":["import React from \"react\";\nimport './SeasonDisplay.css';\n\nconst seasonConfig = {\n    summer: {\n        text: \"Let's hit the beach\",\n        iconName: \"sun\"\n    },\n    winter: {\n        text: \"Burr, it is chilly\",\n        iconName: \"snowflake\"\n    }\n}\nconst getSeason = (lat, month) => {\n    if (month > 2 && month < 9) {\n        return lat > 0? 'summer' : 'winter';\n    } else {\n        return lat > 0? 'winter' : 'summer';\n    }\n}\nconst SeasonDisplay = (props) => {\n    const season = getSeason(props.lat, new Date().getMonth());\n    const {text, iconName } = seasonConfig[season];\n\n    return(\n        <div className={`season-display ${season}`}>\n            <i className={`massive ${iconName} icon icon-left`} />\n            <h1>{text}</h1>\n            <i className={`massive ${iconName} icon icon-right`} />\n        </div>\n    );\n};\n\nexport default SeasonDisplay;","\nimport React from 'react';\n\nconst Spinner = () => {\n    return (\n        <div className=\"ui active dimmer\">\n            <div className=\"ui bit text loader\">\n                Loading...\n            </div>\n        </div>\n    );\n}\n\nexport default Spinner;","import React from \"react\";\nimport SeasonDisplay from \"./components/SeasonDisplay\";\nimport Spinner from \"./components/Spinner\";\n\nclass App extends React.Component {\n    state = {lat: null, errorMessage: \"\"};\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => this.setState({lat: position.coords.latitude}),\n            (err) => this.setState({errorMessage: err.message})\n        );\n    }\n\n    render() {\n        if (this.state.errorMessage && !this.state.lat) {\n            return <div>Error: {this.state.errorMessage}</div>;\n        }\n\n        if (!this.state.errorMessage && this.state.lat) {\n            return <SeasonDisplay lat={this.state.lat} />\n        }\n\n        return(\n            <div className=\"App\">\n                <Spinner />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}